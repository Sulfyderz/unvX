#!/bin/bash

set -e

###############################################################################
# Variable and Constant Declaration
###############################################################################

# Current directory absolute path
DIR_CUR=$(dirname "$(realpath "$0")")

# Strings to output
STR_CONF="Configure"
STR_DONE="\033[38;2;12;188;121;51mDone\033[0m"
STR_GEN="Generate"
STR_INPROG="\033[38;2;68;121;177;51mIn progress...\033[0m"
STR_INSTL="Install"
STR_LINK="Link"
STR_SKIP="\033[38;2;4;152;154;51mSkipped (already installed)\033[0m"
STR_SKIP_MANUAL="\033[38;2;4;152;154;51mSkipped\033[0m"
STR_TIP="Tip"
STR_UNVX="\033[1munvX\033[0m"

###############################################################################
# Function Declaration
###############################################################################

# Install Git hook scripts
configure_git_hooks() {
	file_pre_commit="$DIR_CUR"/.git/hooks/pre-commit
	content_pre_commit="#!/usr/bin/env nix
#! nix shell nixpkgs#pre-commit --command bash

ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)
HERE=\"\$(cd \"\$(dirname \"\$0\")\" && pwd)\"
ARGS+=(--hook-dir \"\$HERE\" -- \"\$@\")

exec pre-commit \"\${ARGS[@]}\""
	echo -e "$content_pre_commit" >"$file_pre_commit"
	chmod a+x "$file_pre_commit"
	echo -e "$STR_UNVX $STR_CONF Git Hooks: $STR_DONE"
}

# Display a tip for the next step
display_tip_next_step() {
	content_tip="   │ What's next? If it's your first install, please run the
   │ \`\033[38;2;190;190;190;51mnix run home-manager -- switch\033[0m\` command. This will make the
   │ \`\033[38;2;190;190;190;51mhome-manager\033[0m\` command available system-wide and apply the
   │ Home Manager profile matching your machine."
	echo -e "$STR_UNVX $STR_TIP:"
	echo -e "$content_tip"
}

# Generate unvX.nix
generate_unvx_nix() {
	file_unvx="$DIR_CUR"/unvX.nix
	content_unvx="# This file is generated by the \`install\` script. It contains information
# about your unvX installation.
{
  directory = {
    root = \""$DIR_CUR"\";
    module = \""$DIR_CUR"/module\";
    host = \""$DIR_CUR"/host\";
  };
}"
	echo -e "$content_unvx" >"$file_unvx"
	chmod a+x "$file_unvx"
	echo -e "$STR_UNVX $STR_GEN unvX.nix: $STR_DONE"
}

# Install Homebrew
install_homebrew() {
	if ! command -v brew &>/dev/null; then
		echo -n "$STR_UNVX Do you want to install Homebrew (optional)? [y/n]: "
		read -r reply
		[ ! -t 0 ] && echo
		if [[ $reply =~ ^[Yy]$ ]]; then
			echo -e "$STR_UNVX $STR_INSTL Homebrew: $STR_INPROG"
			/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
			echo -e "$STR_UNVX $STR_INSTL Homebrew: $STR_DONE"
		else
			echo -e "$STR_UNVX $STR_INSTL Homebrew: $STR_SKIP_MANUAL"
		fi
	else
		echo -e "$STR_UNVX $STR_INSTL Homebrew: $STR_SKIP"
	fi
}

# Install Nix
install_nix() {
	if ! command -v nix &>/dev/null; then
		echo -e "$STR_UNVX $STR_INSTL Nix: $STR_INPROG"
		curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix |
			sh -s -- install
		echo -e "$STR_UNVX $STR_INSTL Nix: $STR_DONE"
	else
		echo -e "$STR_UNVX $STR_INSTL Nix: $STR_SKIP"
	fi
}

# Link with Home Manager
link_with_home_manager() {
	mkdir -p "$HOME"/.config/home-manager/
	ln -sf "$DIR_CUR"/flake.nix "$HOME"/.config/home-manager/flake.nix
	ln -sf "$DIR_CUR"/flake.lock "$HOME"/.config/home-manager/flake.lock
	echo -e "$STR_UNVX $STR_LINK with Home Manager: $STR_DONE"
}

###############################################################################
# Executable
###############################################################################

# Install
install_homebrew
install_nix

# Configure
configure_git_hooks

# Generate
generate_unvx_nix

# Link
link_with_home_manager

# Display tips
display_tip_next_step
